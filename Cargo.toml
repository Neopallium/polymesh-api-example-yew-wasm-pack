[package]
name = "yew-wasm-pack-template"
version = "0.2.0"
authors = ["Yew Maintainers <maintainers@yew.rs"]
edition = "2021"
description = "Example of using the Rust polymesh-api with Yew"
readme = "README.md"
repository = "https://github.com/yewstack/yew-trunk-minimal-template"
license = "MIT OR Apache-2.0"
keywords = ["yew", "wasm-pack"]
categories = ["gui", "wasm", "web-programming"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
js-sys = "0.3"
web-sys = { version = "0.3.4", features = [ 'KeyboardEvent'] }

wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4"
serde-wasm-bindgen = "0.4"
wee_alloc = { version = "0.4.4", optional = true }

yew = { version="0.21", features=["csr"] }
yew-router = { version = "0.18" }
yew-agent = { version = "0.3" }

gloo-storage = { version = "0.3" }

serde = { version = "1", features = ["derive"] }
serde_json = { version = "1.0", features = ["preserve_order"] }

hex = "0.4"
log = "0.4"
wasm-logger = "0.2"

[dev-dependencies]
wasm-bindgen-test = "0.3"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { version = "1.32", features = ["full"] }
polymesh-api = { version = "3.2", features = [] }

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "1.32", features = ["rt", "sync"] }
polymesh-api = { version = "3.2", default-features = false, features = ["wasm", "serde"] }

[patch.crates-io]

polymesh-api = { path = "../polymesh-api/" }
#polymesh-api = { git = "https://github.com/PolymeshAssociation/polymesh-api" }
